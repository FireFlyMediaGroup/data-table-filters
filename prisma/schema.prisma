// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  documents Document[]
  powras    POWRA[]
  tailboards Tailboard[]
  fplMissions FPLMission[]
}

enum DocumentStatus {
  DRAFT
  PENDING
  APPROVED
  REJECTED
}

model Document {
  id        String   @id @default(uuid())
  title     String
  content   String
  status    DocumentStatus @default(DRAFT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model POWRA {
  id              String   @id @default(uuid())
  jobDescription  String   @db.Text // Store as text to handle large JSON strings
  stopDetails     String   @db.Text
  thinkDetails    String   @db.Text
  actDetails      String   @db.Text
  reviewDetails   String   @db.Text
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id])
  userId          String

  @@index([userId])
}

model Tailboard {
  id        String   @id @default(uuid())
  details   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model FPLMission {
  id        String   @id @default(uuid())
  missionDetails Json
  riskMatrix Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
